https://github.com/nasirjd/foodmine-course

1. Creating Component
2. Angular Router
3. Reactive forms & http
4. Rxjs
5. Json Web Token
6. Payment gatway

7. angular installation
    sudo npm install -g @angular/cli@
    ng new client
    ng serve --open

8. Add Header
    ng g c components/partials/header

9. List food
    Create food model
    Create data.ts
        Add sample food 
    
    Create food service: ng g s services/food

npm install ng-starrating

10. Search 
    Add search method for food service 
    Add search route 
    Show search result in home component 


Remove warning: set "noPropertyAccessFromIndexSignature": false, in tsconfig.json file

11. Tags bar 
    Create tag model 
    Add sample tags to data.ts 
    Food service
        Add get all tags method
        Add get all foods by tag method
    Add tags route
    Show tag result in Home component

12. Food Page 
        Add method to food service

13. Cart Page 
    Create cartItem model 
    Create cart model
    Generate cart service

14. Not found 
        Add to pages Home, Food and Cart 

15. Connect to Backend
        npm install typescript
        Create tsconfig.json 
        create .gitignore
        create data.ts 
        create server.ts 
            install @typts 
            Add Apis 

        install nodemon ts-node 
        Add urs.ts to frontend
        Add HttpClient module 
        Update food service 

16. Login Page 
        Generate Component
        1.  Add to routes
        2.  Add ts 
        3.  Add html
            1.  Import Reactive Forms Module

        Generate User Service
        1.  Generate User model
        2.  Add User Subject
        3.  Add Login Method   
            1.  Add User Urls
            2.  Generate IUserLogin interface
            3.  Add ngx-toastr
                1.  Import Module
                2.  Import BrowserAnimationsModule
                3.  Add styles in angular.json
            4.  Add to Header
        1. Add Local Storage methods
        2. Add Logout Method
           1. Add to Header 


17. Make Components For Login Page
    1. Input Container
    2. Input Validation
    3. Text Input
    4. Default Button

18. Connect Login API To MongoDB 
    1. Moving Apis into routers
    2. Create MongoDB 
    3. Create .env file
    4. Install
       1. mongoose
       2. dotenv
       3. bcryptjs
       4. express-async-handler
    5. Connect to MongoDB 
    6. Use MongoDB instead of data.ts in apis


19. Register User
    1.  Add Register api
    2.  Add Register service method
    3.  Add Register link 
    4.  Add Register Component

20. 16. Loading!
    1.  Add Image 
    2.  Add Component
    3.  Add Service
    4.  Add Interceptor

21. Checkout Page
    1.  Create Order Model
    2.  Create Checkout Page Component
        1.  Add To Router   
    3.  Add User to User Service 
    4.  Add Cart to Cart Service 
    5.  Create Order Items List Component

22.  Adding Map To The Checkout Page
    1.  Add Leaflet npm package
        1.  Add @types/leaflet
        2.  Add Css to angular.json
    2.  Add AddressLatLng to Order Model
    3.  Create Map component
        1.  Add to checkout page
        2.  Add TS
            1.  Change app-map selector to map
        3.  Add Html
        4.  Add CSS
    4.  Add Auth Guard

    